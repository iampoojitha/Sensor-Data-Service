version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    restart: always
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      - MONGO_INITDB_DATABASE=avis
    networks:
      - sensor-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - sensor-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "sensor-data:1:1"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - sensor-network


  receive-data:
    image: receive-data:latest
    container_name: receive-data
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_started
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/avis
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=localhost:9092
      - SPRING_KAFKA_CONSUMER_GROUP_ID=user-group
    restart: always
    networks:
      - sensor-network

  send-data:
     image: send-data:latest
     container_name: send-data
     depends_on:
       - kafka
     ports:
       - "8082:8082"
     environment:
       - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
     restart: always
     networks:
       - sensor-network

networks:
  sensor-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  kafka_data:
    driver: local
